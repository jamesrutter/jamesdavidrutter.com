---
import Layout from "@/layouts/layout.astro";
import { getCollection, render } from "astro:content";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => {
    // Extract the project folder name from the id (e.g., "haystack-it/haystack-it" -> "haystack-it")
    const slug = project.id.split("/")[0];
    return {
      params: { slug },
      props: { project },
    };
  });
}

const { project } = Astro.props;
const { Content } = await render(project);
---

<Layout>
  <main class="project-detail">
    <div class="wrapper">
      <div class="project-header">
        <nav class="breadcrumb">
          <a href="/projects">‚Üê Back to Projects</a>
        </nav>

        <div class="project-meta">
          <span class="category">{project.data.category}</span>
          <time datetime={project.data.date.toISOString()}>
            {
              project.data.date.toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
              })
            }
          </time>
        </div>

        <h1 class="project-title">{project.data.title}</h1>
        <p class="project-description">{project.data.description}</p>

        {
          project.data.tags && project.data.tags.length > 0 && (
            <div class="project-tags">
              {project.data.tags.map((tag) => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          )
        }

        {
          project.data.link && (
            <div class="project-links">
              <a
                href={project.data.link}
                class="btn btn_primary"
                target="_blank"
                rel="noopener noreferrer"
              >
                View Project
              </a>
            </div>
          )
        }
      </div>

      <article class="project-content">
        <Content />
      </article>
    </div>
  </main>
</Layout>

<style>
  .project-detail {
    padding-top: calc(var(--header-height) + var(--space-2xl));
    padding-bottom: var(--space-2xl);
  }

  .breadcrumb {
    margin-bottom: var(--space-md);
  }

  .breadcrumb a {
    color: var(--text-secondary);
    text-decoration: none;
    font-size: 0.95rem;
    transition: color 0.2s ease;
  }

  .breadcrumb a:hover {
    color: var(--accent);
  }

  .project-header {
    margin-bottom: var(--space-2xl);
    padding-bottom: var(--space-xl);
    border-bottom: 1px solid var(--border);
  }

  .project-meta {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    margin-bottom: var(--space-md);
    font-size: 0.9rem;
  }

  .category {
    background-color: var(--bg-tertiary);
    color: var(--accent);
    padding: var(--space-xs) var(--space-sm);
    border-radius: calc(var(--border-radius) / 2);
    font-weight: var(--font-weight-medium);
    text-transform: uppercase;
    font-size: 0.8rem;
    letter-spacing: 0.5px;
  }

  .project-meta time {
    color: var(--text-muted);
  }

  .project-title {
    font-size: 3rem;
    font-weight: var(--font-weight-light);
    color: var(--text-primary);
    margin-bottom: var(--space-md);
    line-height: 1.2;
  }

  .project-description {
    font-size: 1.25rem;
    color: var(--text-secondary);
    line-height: 1.6;
    margin-bottom: var(--space-lg);
    max-width: 800px;
  }

  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
    margin-bottom: var(--space-lg);
  }

  .tag {
    background-color: var(--bg-secondary);
    color: var(--text-secondary);
    padding: calc(var(--space-xs) / 2) var(--space-sm);
    border-radius: calc(var(--border-radius) / 2);
    font-size: 0.85rem;
    border: 1px solid var(--border);
  }

  .project-links {
    display: flex;
    gap: var(--space-md);
  }

  .project-content {
    max-width: 800px;
    line-height: 1.7;
  }

  .project-content :global(h1),
  .project-content :global(h2),
  .project-content :global(h3),
  .project-content :global(h4),
  .project-content :global(h5),
  .project-content :global(h6) {
    color: var(--text-primary);
    margin-top: var(--space-xl);
    margin-bottom: var(--space-md);
    font-weight: var(--font-weight-medium);
  }

  .project-content :global(h1) {
    font-size: 2.5rem;
    font-weight: var(--font-weight-light);
    border-bottom: 1px solid var(--border);
    padding-bottom: var(--space-sm);
  }

  .project-content :global(h2) {
    font-size: 2rem;
    font-weight: var(--font-weight-light);
  }

  .project-content :global(h3) {
    font-size: 1.5rem;
  }

  .project-content :global(h4) {
    font-size: 1.25rem;
  }

  .project-content :global(p) {
    color: var(--text-secondary);
    margin-bottom: var(--space-md);
  }

  .project-content :global(ul),
  .project-content :global(ol) {
    color: var(--text-secondary);
    margin-bottom: var(--space-md);
    padding-left: var(--space-lg);
  }

  .project-content :global(li) {
    margin-bottom: var(--space-xs);
  }

  .project-content :global(strong) {
    color: var(--text-primary);
    font-weight: var(--font-weight-medium);
  }

  .project-content :global(blockquote) {
    border-left: 3px solid var(--accent);
    padding-left: var(--space-md);
    margin: var(--space-lg) 0;
    font-style: italic;
    color: var(--text-muted);
  }

  .project-content :global(code) {
    background-color: var(--bg-secondary);
    color: var(--accent);
    padding: calc(var(--space-xs) / 2) var(--space-xs);
    border-radius: calc(var(--border-radius) / 2);
    font-size: 0.9em;
  }

  .project-content :global(pre) {
    background-color: var(--bg-secondary);
    padding: var(--space-md);
    border-radius: var(--border-radius);
    overflow-x: auto;
    margin: var(--space-lg) 0;
    border: 1px solid var(--border);
  }

  .project-content :global(pre code) {
    background: none;
    padding: 0;
    color: var(--text-primary);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .project-title {
      font-size: 2.5rem;
    }

    .project-description {
      font-size: 1.1rem;
    }

    .project-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-xs);
    }

    .project-content :global(h1) {
      font-size: 2rem;
    }

    .project-content :global(h2) {
      font-size: 1.75rem;
    }
  }
</style>
